const _0xe90c = [
  "element\x20mi",
  "</p>\x0a\x20\x20\x20\x20\x20",
  "i.countapi",
  "https://ap",
  "howing\x20tod",
  "lement\x22>\x0a\x20",
  "\x20\x20\x20\x20\x20\x20\x20\x20<s",
  ">\x0a\x20\x20\x20\x20\x20\x20</",
  ".days",
  "filter",
  "\x22lazy\x22\x20/>\x0a",
  "ss=\x22big-te",
  "ay\x20",
  "length",
  "nds\x22>0</p>",
  "/div>\x0a\x20\x20\x20\x20",
  "ss=\x22c-elem",
  "v\x20class=\x22c",
  "\x20\x20<div\x20cla",
  "on\x20Disney+",
  "class=\x22car",
  "d-text\x20typ",
  "t\x20minutes\x22",
  "rd-texts\x22>",
  "221901kcuQLL",
  "ds</span>\x0a",
  "s=\x22big-tex",
  "<a\x20href=\x22",
  "s=\x22card-te",
  "555563DgRlfu",
  "3475hqiTNM",
  "forEach",
  "\x22>\x0a\x20\x20\x20\x20\x20\x20<",
  ".seconds",
  "days",
  "ent\x22>\x0a\x20\x20\x20\x20",
  ".row",
  "innerHTML",
  "\x20<div\x20clas",
  "\x20\x20\x20\x20\x20\x20\x20<di",
  "querySelec",
  "Details</a",
  "</p>",
  "\x0a\x20\x20\x20\x20\x20\x20\x20\x20<",
  "</h2>\x0a\x20\x20\x20\x20",
  "md-text\x22>S",
  "tor",
  "xt\x22>",
  "series",
  "card",
  "\x20\x20\x20</div>\x0a",
  "\x20\x20\x20<p\x20clas",
  "d\x22\x20data-da",
  "realeaseDa",
  "div\x20class=",
  "p\x20class=\x22b",
  "<p\x20class=\x22",
  "pan>days</",
  "arget=\x22_bl",
  "data-date",
  "div>\x0a\x20\x20\x20\x20<",
  "Series",
  "ard-btn\x22\x20t",
  "es/?amount",
  "ss=\x22countd",
  "g-marvel-m",
  "time",
  "\x20class=\x22ca",
  "ovies/movi",
  "34QlkcgI",
  "span>secon",
  ".minutes",
  "in\x20Cinemas",
  "span>\x0a\x20\x20\x20\x20",
  "te=\x22",
  "ard-title\x22",
  "e\x22>\x0a\x20\x20\x20\x20\x20\x20",
  "getTime",
  "\x22\x20alt=\x22",
  "big-text\x22>",
  "v>\x0a\x20\x20\x20\x20\x20\x20<",
  "62197apdXxU",
  "ys\x22>0</p>\x0a",
  "\x20\x20\x20\x20\x20\x20</di",
  "numeric",
  "pan>hours<",
  "TBA\x20",
  "class=\x22c-e",
  "ntent\x22>\x0a\x20\x20",
  "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20",
  "\x20\x20\x20\x20\x20</div",
  "getAttribu",
  "ig-text\x20da",
  "n>\x0a\x20\x20\x20\x20\x20\x20\x20",
  ">0</p>\x0a\x20\x20\x20",
  "\x20\x20\x20\x20\x20\x20\x20<p\x20",
  "\x20\x20\x20\x20\x20<span",
  "d-actions\x22",
  "remove",
  "\x22card-body",
  "minutes",
  "\x20\x20\x20\x20\x20<div\x20",
  "movie",
  "\x20\x20<img\x20src",
  "=\x22./",
  "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20",
  "\x20class=\x22c-",
  "929136ElXwXm",
  "/div>\x0a\x20\x20",
  "\x20\x20\x20\x20\x20\x20\x20\x20",
  "\x20\x20\x20\x20\x20\x20<div",
  "\x20\x20\x20\x20\x20\x20\x20\x20\x20<",
  "floor",
  "428301hNsNvS",
  "e/upcommin",
  "113119CeuvZy",
]
const _0xe8b2a = function (_0x5c23ce, _0xc2475f, _0x5b71e1, _0x50d675) {
    return _0x1ca3(_0x5c23ce - 0x17, _0x5b71e1)
  },
  _0x4570d8 = function (_0x419734, _0x2a192a, _0x41f7c2, _0x105fe0) {
    return _0x1ca3(_0x419734 - 0x17, _0x41f7c2)
  }
;(function (_0x473916, _0x4e0c56) {
  const _0xea91b4 = function (_0x351776, _0x3db125, _0x3e2ed9, _0x154e51) {
      return _0x1ca3(_0x154e51 - -0x17d, _0x351776)
    },
    _0xc313b = function (_0x57e43f, _0x33729b, _0x4b4b6e, _0x3e899d) {
      return _0x1ca3(_0x3e899d - -0x17d, _0x57e43f)
    }
  while (!![]) {
    try {
      const _0x3a931b =
        -parseInt(_0xea91b4(-0x1f, -0x1a, -0x39, -0x41)) +
        parseInt(_0xea91b4(0x23, -0x27, 0x27, 0x13)) +
        parseInt(_0xc313b(-0x79, -0x10, -0x16, -0x40)) *
          parseInt(_0xc313b(0x0, -0x9, 0x1a, -0x19)) +
        -parseInt(_0xea91b4(0x1b, -0x2a, 0x1b, -0xd)) +
        parseInt(_0xea91b4(0x4e, 0x4f, 0x2b, 0x15)) +
        parseInt(_0xc313b(0x47, 0x19, 0x5, 0xd)) +
        -parseInt(_0xea91b4(-0xd, -0x67, -0x2d, -0x46))
      if (_0x3a931b === _0x4e0c56) break
      else _0x473916["push"](_0x473916["shift"]())
    } catch (_0x48b632) {
      _0x473916["push"](_0x473916["shift"]())
    }
  }
})(_0xe90c, 0xb6df5)
import _0x2682cc from "../data/movie.js"
import { formatTime, join, sortData, toTimestamp } from "./utils.js"
const row = document["querySelec" + _0xe8b2a(0x164, 0x167, 0x169, 0x19c)](
  _0x4570d8(0x15a, 0x184, 0x170, 0x150)
)
let optionDate = [
  { day: _0x4570d8(0x18a, 0x167, 0x1c4, 0x19e) },
  { month: "short" },
  { year: _0x4570d8(0x18a, 0x1a9, 0x157, 0x162) },
]
const currDate = join(new Date(), optionDate, "\x20"),
  moviesSort = sortData(_0x2682cc)[_0x4570d8(0x1b3, 0x198, 0x1d3, 0x1ab)](
    (_0x551501) =>
      toTimestamp(_0x551501[_0x4570d8(0x16b, 0x135, 0x160, 0x149) + "te"]) >=
        toTimestamp(currDate) || _0x551501[_0xe8b2a(0x16b, 0x18c, 0x134, 0x199) + "te"] === ""
  )
moviesSort[_0xe8b2a(0x155, 0x123, 0x16d, 0x13a)]((_0x326005) => {
  const _0x22f343 = function (_0x2715f6, _0x57bca0, _0x4af2d2, _0x2cd631) {
      return _0x4570d8(_0x2cd631 - 0x15b, _0x57bca0 - 0xe5, _0x4af2d2, _0x2cd631 - 0xb8)
    },
    _0x203032 = function (_0x325106, _0x5630f8, _0x58a55e, _0x55c842) {
      return _0xe8b2a(_0x55c842 - 0x15b, _0x5630f8 - 0xb, _0x58a55e, _0x55c842 - 0x132)
    },
    {
      title: _0x200f1d,
      type: _0x3e37a2,
      image: _0xe7a5c3,
      realeaseDate: _0x2aea14,
      year: _0x1dc946,
      details: _0x5eb0ce,
    } = _0x326005,
    _0x26c6d7 =
      "\x0a\x20\x20\x20\x20<div\x20" +
      "class=\x22car" +
      _0x22f343(0x2c1, 0x28d, 0x2a7, 0x2c5) +
      _0x22f343(0x2a1, 0x2e9, 0x2f8, 0x2db) +
      _0x2aea14 +
      (_0x203032(0x2b3, 0x2a9, 0x2c9, 0x2b1) +
        _0x203032(0x2a3, 0x2c6, 0x2d0, 0x2c7) +
        "\x22card-imag" +
        _0x22f343(0x2de, 0x2d4, 0x304, 0x2dd) +
        _0x22f343(0x2eb, 0x2d2, 0x2da, 0x2f8) +
        _0x203032(0x32e, 0x325, 0x307, 0x2f9)) +
      _0xe7a5c3 +
      _0x203032(0x2db, 0x2cb, 0x2b9, 0x2df) +
      _0x200f1d +
      ("\x22\x20loading=" +
        _0x22f343(0x311, 0x2e9, 0x318, 0x30f) +
        _0x203032(0x2f4, 0x318, 0x316, 0x2e4) +
        _0x22f343(0x2d4, 0x314, 0x313, 0x2e1) +
        "div\x20class=" +
        _0x22f343(0x2e3, 0x2f6, 0x322, 0x2f4) +
        "\x22>\x0a\x20\x20\x20\x20\x20\x20\x20" +
        _0x22f343(0x280, 0x2c1, 0x2c3, 0x2b7) +
        "s=\x22card-co" +
        _0x203032(0x31e, 0x2eb, 0x2c8, 0x2e9) +
        "\x20\x20\x20\x20\x20\x20\x20\x20<h" +
        "2\x20class=\x22c" +
        _0x203032(0x2b8, 0x2d2, 0x2c0, 0x2dc) +
        ">") +
      _0x200f1d +
      (_0x203032(0x294, 0x284, 0x289, 0x2bd) +
        _0x203032(0x2df, 0x324, 0x317, 0x2ff) +
        _0x203032(0x305, 0x2d5, 0x29b, 0x2d4) +
        _0x203032(0x2ed, 0x34a, 0x2f6, 0x31c) +
        _0x203032(0x330, 0x331, 0x30c, 0x2fa) +
        _0x22f343(0x2c2, 0x2c3, 0x2f9, 0x2c4) +
        _0x22f343(0x2ae, 0x2e4, 0x283, 0x2ad) +
        _0x22f343(0x28e, 0x2b5, 0x2de, 0x2c0)) +
      (_0x2aea14 ? _0x2aea14 : _0x1dc946) +
      (_0x203032(0x33d, 0x30b, 0x33d, 0x306) +
        _0x203032(0x2fd, 0x307, 0x2f8, 0x2f0) +
        _0x203032(0x353, 0x312, 0x349, 0x319) +
        _0x203032(0x2e7, 0x31f, 0x322, 0x31a) +
        "e\x20") +
      (_0x3e37a2 === _0x203032(0x2ab, 0x2e2, 0x2b1, 0x2ce)
        ? _0x203032(0x2c9, 0x2a6, 0x2e5, 0x2c1)
        : _0x203032(0x2c1, 0x2fa, 0x2c0, 0x2f7)) +
      "\x22>" +
      _0x3e37a2 +
      ("</p>\x0a\x20\x20\x20\x20\x20" +
        _0x203032(0x31f, 0x311, 0x305, 0x2eb) +
        ">\x0a\x20\x20\x20\x20\x20\x20\x20\x20" +
        _0x203032(0x2de, 0x30b, 0x350, 0x317) +
        _0x22f343(0x2fc, 0x2a9, 0x308, 0x2d1) +
        "own\x22>\x0a\x20\x20\x20\x20" +
        _0x203032(0x312, 0x32e, 0x2d1, 0x2fe)) +
      (toTimestamp(_0x2aea14) === toTimestamp(currDate)
        ? "<p\x20class=\x22" +
          _0x203032(0x28c, 0x2a3, 0x2a5, 0x2be) +
          _0x22f343(0x2f8, 0x30f, 0x33a, 0x309) +
          _0x22f343(0x313, 0x2db, 0x2eb, 0x311) +
          (_0x3e37a2 === "Series"
            ? _0x203032(0x2f5, 0x2ef, 0x2e7, 0x318)
            : _0x22f343(0x2e3, 0x2fb, 0x2fb, 0x2d9)) +
          _0x203032(0x2b8, 0x288, 0x2b6, 0x2bb)
        : _0x2aea14
        ? "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
          _0x22f343(0x2b3, 0x2f2, 0x2f2, 0x2b8) +
          _0x22f343(0x311, 0x312, 0x2f2, 0x316) +
          "-element\x22>" +
          _0x22f343(0x323, 0x311, 0x2d7, 0x2fa) +
          _0x22f343(0x32e, 0x2d2, 0x320, 0x300) +
          _0x22f343(0x2ad, 0x2be, 0x29e, 0x2c8) +
          _0x203032(0x2ea, 0x304, 0x2fe, 0x2ed) +
          "ys\x22\x20id=\x22da" +
          _0x22f343(0x2ed, 0x2de, 0x2af, 0x2e3) +
          _0x22f343(0x2de, 0x2ed, 0x2fe, 0x2ea) +
          _0x203032(0x2e9, 0x31e, 0x2f5, 0x30b) +
          _0x203032(0x2b6, 0x2b8, 0x2c5, 0x2ca) +
          _0x203032(0x2e7, 0x2ca, 0x305, 0x2da) +
          "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
          "\x20\x20</div>\x0a\x20" +
          _0x203032(0x2d4, 0x31f, 0x311, 0x2ea) +
          "\x20\x20\x20\x20\x20<div\x20" +
          _0x203032(0x2ea, 0x2b6, 0x2cf, 0x2e8) +
          _0x22f343(0x33f, 0x300, 0x2d9, 0x30a) +
          "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
          _0x203032(0x31c, 0x326, 0x322, 0x2f0) +
          "class=\x22big" +
          "-text\x20hour" +
          "s\x22\x20id=\x22hou" +
          "rs\x22>0</p>\x0a" +
          _0x22f343(0x2be, 0x2f8, 0x2e6, 0x2ea) +
          _0x22f343(0x31a, 0x2e8, 0x33c, 0x30b) +
          _0x22f343(0x2d7, 0x2be, 0x305, 0x2e6) +
          "/span>\x0a\x20\x20\x20" +
          "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
          _0x203032(0x2f4, 0x2da, 0x2af, 0x2c3) +
          _0x22f343(0x2d6, 0x2b6, 0x318, 0x2ea) +
          _0x203032(0x2f9, 0x2c7, 0x30b, 0x2ff) +
          _0x203032(0x2e2, 0x320, 0x2d8, 0x2fb) +
          _0x203032(0x2f2, 0x328, 0x32b, 0x305) +
          "ns\x22>\x0a\x20\x20\x20\x20\x20" +
          _0x203032(0x305, 0x2e8, 0x2b8, 0x2ea) +
          _0x22f343(0x2d6, 0x2d2, 0x2b8, 0x2c4) +
          _0x203032(0x2b4, 0x2c7, 0x2c5, 0x2ab) +
          _0x22f343(0x33f, 0x319, 0x2f0, 0x31b) +
          "\x20id=\x22mins\x22" +
          _0x203032(0x2e9, 0x2d9, 0x2cf, 0x2ef) +
          _0x22f343(0x2b0, 0x2d3, 0x321, 0x2ea) +
          _0x22f343(0x2d8, 0x31a, 0x30b, 0x2f1) +
          ">mins</spa" +
          _0x203032(0x2c0, 0x309, 0x2ed, 0x2ee) +
          _0x203032(0x32d, 0x2ca, 0x2eb, 0x300) +
          _0x22f343(0x2ee, 0x347, 0x321, 0x314) +
          "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
          _0x203032(0x2f0, 0x34d, 0x2fd, 0x317) +
          _0x22f343(0x317, 0x325, 0x2e2, 0x315) +
          _0x22f343(0x2d1, 0x2d4, 0x2c4, 0x2b4) +
          _0x22f343(0x2e9, 0x2eb, 0x2ec, 0x2ea) +
          "\x20\x20\x20\x20<p\x20cla" +
          _0x203032(0x2e1, 0x34a, 0x310, 0x310) +
          "xt\x20seconds" +
          "\x22\x20id=\x22seco" +
          _0x203032(0x2ff, 0x32f, 0x30a, 0x313) +
          "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20" +
          _0x203032(0x2f1, 0x2ca, 0x311, 0x300) +
          _0x22f343(0x2c6, 0x2de, 0x2c7, 0x2d7) +
          _0x203032(0x2a7, 0x284, 0x2da, 0x2aa) +
          _0x22f343(0x2fb, 0x2f5, 0x2c3, 0x2ea) +
          _0x203032(0x2b6, 0x301, 0x2c9, 0x2e4) +
          "v>"
        : _0x22f343(0x301, 0x2ad, 0x2b2, 0x2c9) +
          _0x22f343(0x2f1, 0x2e1, 0x2b0, 0x2e0) +
          _0x22f343(0x2c0, 0x2e4, 0x2ba, 0x2e7) +
          _0x1dc946 +
          _0x22f343(0x2e8, 0x2e3, 0x290, 0x2bb)) +
      (_0x203032(0x298, 0x2ee, 0x2c2, 0x2bc) +
        "/div>\x0a\x20\x20\x20\x20" +
        "\x20\x20</div>\x0a\x20" +
        _0x203032(0x329, 0x2f3, 0x30e, 0x2f6) +
        "class=\x22car" +
        _0x203032(0x2f4, 0x2c4, 0x31a, 0x2f2) +
        ">\x0a\x20\x20\x20\x20\x20\x20\x20\x20" +
        _0x22f343(0x281, 0x2bd, 0x2e3, 0x2ac)) +
      _0x5eb0ce +
      ("\x22\x20class=\x22c" +
        _0x203032(0x2f8, 0x2a0, 0x2fa, 0x2cf) +
        _0x203032(0x2e7, 0x2e3, 0x2cc, 0x2cb) +
        "ank\x22\x20rel=\x22" +
        "noopener\x22>" +
        _0x22f343(0x2dd, 0x2a9, 0x293, 0x2ba) +
        _0x203032(0x2d9, 0x2de, 0x2d5, 0x30c) +
        _0x203032(0x29e, 0x2fb, 0x307, 0x2cd) +
        _0x203032(0x2e2, 0x2f1, 0x311, 0x2fd))
  row[_0x203032(0x2e6, 0x29c, 0x2ae, 0x2b6)] += _0x26c6d7
})
function _0x1ca3(_0xdbb16d, _0x1429eb) {
  return (
    (_0x1ca3 = function (_0xe90c5b, _0x1ca34f) {
      _0xe90c5b = _0xe90c5b - 0x137
      let _0x5e63d6 = _0xe90c[_0xe90c5b]
      return _0x5e63d6
    }),
    _0x1ca3(_0xdbb16d, _0x1429eb)
  )
}
const cards = document["getElement" + "sByClassNa" + "me"](_0xe8b2a(0x167, 0x14d, 0x194, 0x13e))
let countDownDate = []
for (let i = 0x0; i < cards[_0x4570d8(0x1b7, 0x1e7, 0x1e0, 0x1e6)]; i++) {
  ;(countDownDate[i] = []),
    (countDownDate[i]["el"] = cards[i]),
    (countDownDate[i][_0x4570d8(0x178, 0x1a3, 0x181, 0x14d)] = cards[i][
      _0x4570d8(0x191, 0x1be, 0x19f, 0x178) + "te"
    ](_0x4570d8(0x171, 0x157, 0x13c, 0x191))
      ? new Date(
          cards[i][_0x4570d8(0x191, 0x1c6, 0x1b1, 0x16d) + "te"](
            _0xe8b2a(0x171, 0x180, 0x170, 0x1ab)
          )
        )[_0xe8b2a(0x183, 0x196, 0x1a7, 0x17e)]()
      : 0x0),
    (countDownDate[i][_0x4570d8(0x158, 0x16f, 0x15f, 0x15a)] = 0x0),
    (countDownDate[i]["hours"] = 0x0),
    (countDownDate[i]["seconds"] = 0x0),
    (countDownDate[i][_0xe8b2a(0x19a, 0x181, 0x193, 0x1af)] = 0x0),
    countDownDate[i][_0xe8b2a(0x178, 0x1a3, 0x19b, 0x14c)] < "22\x20apr\x20204" + "0" &&
      countDownDate[i]["el"][_0x4570d8(0x198, 0x187, 0x1c1, 0x179)]()
}
setInterval(() => {
  const _0x28f60c = function (_0x5d78c0, _0x4f375f, _0x27e828, _0x4bbf49) {
      return _0x4570d8(_0x4f375f - -0xe5, _0x4f375f - 0x115, _0x5d78c0, _0x4bbf49 - 0xed)
    },
    _0x2525d = function (_0x331b2b, _0x347e95, _0x182a9f, _0xf52789) {
      return _0x4570d8(_0x347e95 - -0xe5, _0x347e95 - 0x135, _0x331b2b, _0xf52789 - 0x12e)
    }
  for (
    let _0x5a0feb = 0x0;
    _0x5a0feb < countDownDate[_0x28f60c(0xba, 0xd2, 0xa0, 0xd9)];
    _0x5a0feb++
  ) {
    const _0x5844b6 = new Date()["getTime"](),
      _0xd10fcd = countDownDate[_0x5a0feb][_0x28f60c(0x8a, 0x93, 0xbe, 0xab)] - _0x5844b6,
      _0x59a155 = _0xd10fcd / 0x3e8,
      _0x51958b = countDownDate[_0x5a0feb]["el"][_0x2525d(0x45, 0x79, 0xb2, 0xa6) + "tor"](
        _0x28f60c(0xda, 0xcd, 0xb2, 0xd5)
      ),
      _0x458643 =
        countDownDate[_0x5a0feb]["el"][_0x28f60c(0x44, 0x79, 0x44, 0x67) + "tor"](".hours"),
      _0x2ef9c5 = countDownDate[_0x5a0feb]["el"]["querySelec" + "tor"](
        _0x28f60c(0x7b, 0x98, 0xae, 0xc1)
      ),
      _0x199a76 = countDownDate[_0x5a0feb]["el"]["querySelec" + _0x28f60c(0x85, 0x7f, 0xb4, 0xa9)](
        _0x2525d(0x8e, 0x72, 0x92, 0x9f)
      ),
      _0x29d094 = Math[_0x2525d(0xfa, 0xc1, 0x93, 0xc7)](_0x59a155 / 0xe10 / 0x18),
      _0x1e7aaf = Math[_0x2525d(0x91, 0xc1, 0x9d, 0xa7)](_0x59a155 / 0xe10) % 0x18,
      _0x38c225 = Math[_0x28f60c(0x99, 0xc1, 0xc8, 0xc8)](_0x59a155 / 0x3c) % 0x3c,
      _0x124e72 = Math[_0x2525d(0x92, 0xc1, 0xb5, 0xa1)](_0x59a155) % 0x3c
    _0xd10fcd > 0x0 &&
      ((_0x51958b[_0x2525d(0x47, 0x76, 0x9e, 0xaf)] = formatTime(_0x29d094)),
      (_0x458643["innerHTML"] = formatTime(_0x1e7aaf)),
      (_0x2ef9c5[_0x2525d(0x46, 0x76, 0x9f, 0x68)] = formatTime(_0x38c225)),
      (_0x199a76[_0x28f60c(0x3c, 0x76, 0x59, 0x76)] = formatTime(_0x124e72)))
  }
}, 0x3e8)
const updateVisitCount = () => {
  const _0x17f18f = function (_0x401352, _0x236434, _0x5c8ad0, _0x351e0c) {
      return _0x4570d8(_0x351e0c - -0x2fc, _0x236434 - 0x130, _0x5c8ad0, _0x351e0c - 0x42)
    },
    _0x33227b = function (_0x463430, _0x51bb1b, _0x465ebe, _0x5c0b86) {
      return _0xe8b2a(_0x5c0b86 - -0x2fc, _0x51bb1b - 0x167, _0x465ebe, _0x5c0b86 - 0x1d9)
    }
  fetch(
    _0x17f18f(-0x139, -0x15e, -0x126, -0x14f) +
      _0x33227b(-0x177, -0x157, -0x170, -0x150) +
      ".xyz/updat" +
      _0x33227b(-0x146, -0x18c, -0x175, -0x154) +
      _0x17f18f(-0x1b4, -0x171, -0x1ac, -0x185) +
      _0x33227b(-0x163, -0x15b, -0x1a7, -0x182) +
      _0x17f18f(-0x187, -0x16e, -0x14d, -0x187) +
      "=1"
  )
}
updateVisitCount()
